"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
MVP –≤–µ—Ä—Å–∏—è - –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
"""
from typing import Dict
from datetime import datetime
from loguru import logger


class ConsoleNotificationHandler:
    """–ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å"""
    
    async def handle_found_message(self, message_data: Dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó
            notification = self._format_notification(message_data)
            
            # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
            print("\n" + "="*50)
            print(notification)
            print("="*50 + "\n")
            
            # –õ–æ–≥–∏—Ä—É–µ–º
            logger.info(f"–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {message_data['chat_title']} –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: {message_data['found_keywords']}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    def _format_notification(self, message_data: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó"""
        
        # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = message_data['message_text']
        if len(message_text) > 200:
            message_text = message_text[:200] + "..."
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        date_str = message_data['date'].strftime("%d.%m.%Y %H:%M:%S")
        
        # –°–æ–∑–¥–∞—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification = f"""üîî [–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É!]

üì¢ –ß–∞—Ç: {message_data['chat_title']}
üÜî –°—Å—ã–ª–∫–∞: https://t.me/{message_data['chat_username']}
‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}
üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(message_data['found_keywords'])}
‚è∞ –í—Ä–µ–º—è: {date_str}"""
        
        return notification


class FileNotificationHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ñ–∞–π–ª"""
    
    def __init__(self, filename: str = "data/found_messages.log"):
        self.filename = filename
    
    async def handle_found_message(self, message_data: Dict):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª"""
        try:
            log_entry = self._format_log_entry(message_data)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
            with open(self.filename, "a", encoding="utf-8") as f:
                f.write(log_entry + "\n")
                
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {self.filename}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")
    
    def _format_log_entry(self, message_data: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ñ–∞–π–ª–∞"""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        return f"[{timestamp}] CHAT: {message_data['chat_title']} (@{message_data['chat_username']}) | " \
               f"KEYWORDS: {','.join(message_data['found_keywords'])} | " \
               f"MESSAGE: {message_data['message_text'].replace('\n', ' ')}"


class DatabaseNotificationHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self):
        from app.storage.redis_storage import RedisStorage
        self.storage = RedisStorage()
        self._initialized = False
    
    async def handle_found_message(self, message_data: Dict):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
            if not self._initialized:
                await self.storage.initialize()
                self._initialized = True
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
            await self.storage.save_found_message(message_data)
            
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {message_data['chat_title']}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
console_handler = ConsoleNotificationHandler()
file_handler = FileNotificationHandler()
database_handler = DatabaseNotificationHandler() 